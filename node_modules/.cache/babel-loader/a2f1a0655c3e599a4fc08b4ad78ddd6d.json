{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport Rwd from '../truffle_abis/Rwd.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    // Our React Code Goes In Here!\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockChainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereuem) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereuem);\n                _context2.next = 4;\n                return window.ethereuem.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum browser detected! You cab check out MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.requestAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //Load Tether Contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('Error! Tether contract not deployed - no detected network');\n\n              case 19:\n                //Load Rwd Contract\n                rwdData = Rwd.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(Rwd.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 25;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 25:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log(rwdBalance);\n                _context3.next = 31;\n                break;\n\n              case 30:\n                window.alert('Error! Reward contract not deployed - no detected network');\n\n              case 31:\n                //Load DecentralBank Contract\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 42;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 37;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 37:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                console.log(stakingBalance);\n                _context3.next = 43;\n                break;\n\n              case 42:\n                window.alert('Error! DecentralBank contract not deployed - no detected network');\n\n              case 43:\n                this.setState({\n                  loading: false\n                });\n\n              case 44:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minHeight: '100vm'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/lanre/Projects/BlockChain/defi-staking-app-starter-main/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","NavBar","Main","Web3","Tether","Rwd","DecentralBank","App","loadWeb3","loadBlockChainData","window","ethereuem","web3","enable","currentProvider","alert","eth","requestAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","rwdData","rwd","rwdBalance","console","log","decentralBankData","decentralBank","stakingBalance","loading","props","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './NavBar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport Rwd from '../truffle_abis/Rwd.json';\nimport DecentralBank from '../truffle_abis/DecentralBank.json';\n\n\n\nclass App extends Component {\n    // Our React Code Goes In Here!\n\n    async componentDidMount() {\n        await this.loadWeb3();\n        await this.loadBlockChainData();\n    }\n\n    async loadWeb3() {\n        if (window.ethereuem) {\n            window.web3 = new Web3(window.ethereuem);\n            await window.ethereuem.enable();\n        } else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider)\n        } else {\n            window.alert('No ethereum browser detected! You cab check out MetaMask!')\n        }\n    }\n\n    async loadBlockChainData() {\n        const web3 = window.web3;\n        const account = await web3.eth.requestAccounts();\n        this.setState({ account: account[0] });\n        const networkId = await web3.eth.net.getId();\n\n\n        //Load Tether Contract\n        const tetherData = Tether.networks[networkId];\n        if (tetherData) {\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n            this.setState({ tether: tether });\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call();\n            this.setState({ tetherBalance: tetherBalance.toString() });\n        } else {\n            window.alert('Error! Tether contract not deployed - no detected network')\n        }\n\n        //Load Rwd Contract\n        const rwdData = Rwd.networks[networkId];\n        if (rwdData) {\n            const rwd = new web3.eth.Contract(Rwd.abi, rwdData.address);\n            this.setState({ rwd: rwd });\n            let rwdBalance = await rwd.methods.balanceOf(this.state.account).call();\n            this.setState({ rwdBalance: rwdBalance.toString() });\n            console.log(rwdBalance);\n        } else {\n            window.alert('Error! Reward contract not deployed - no detected network')\n        }\n\n        //Load DecentralBank Contract\n        const decentralBankData = DecentralBank.networks[networkId];\n        if (decentralBankData) {\n            const decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n            this.setState({ decentralBank: decentralBank });\n            let stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call();\n            this.setState({ stakingBalance: stakingBalance.toString() });\n            console.log(stakingBalance);\n        } else {\n            window.alert('Error! DecentralBank contract not deployed - no detected network')\n        }\n\n        this.setState({ loading: false });\n\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: '0x0',\n            tether: {},\n            rwd: {},\n            decentralBank: {},\n            tetherBalance: '0',\n            rwdBalance: '0',\n            stakingBalance: '0',\n            loading: true\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <NavBar account={this.state.account} />\n                    <div className='container-fluid mt-5'>\n                        <div className='row'>\n                            <main role='main' className='col-lg-12 ml-auto mr-auto' style={{ maxWidth: '600px', minHeight: '100vm' }} >\n                                <div>\n                                    <Main />\n                                </div>\n                            </main>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}